public class GoBoard {
    // Constants representing the size of the board and an empty cell
    private static final int BOARD_SIZE = 9; // Size of the board (9x9)
    private static final char EMPTY = '-';   // Represents an empty cell

    // 2D array to represent the board
    private char[][] board;

    // Constructor to initialize the board
    public GoBoard() {
        // Create a 2D array to represent the board with the specified size
        board = new char[BOARD_SIZE][BOARD_SIZE];
        // Initialize the board with empty cells
        initializeBoard();
    }

    // Method to initialize the board with empty cells
    private void initializeBoard() {
        // Loop through each row and column of the board
        for (int i = 0; i < BOARD_SIZE; i++) {
            for (int j = 0; j < BOARD_SIZE; j++) {
                // Set each cell of the board to represent an empty cell
                board[i][j] = EMPTY;
            }
        }
    }

    // Method to display the current state of the board
    public void displayBoard() {
        // Loop through each row of the board
        for (int i = 0; i < BOARD_SIZE; i++) {
            // Loop through each column of the board within the current row
            for (int j = 0; j < BOARD_SIZE; j++) {
                // Print the content of the current cell followed by a space
                System.out.print(board[i][j] + " ");
            }
            // Move to the next line after printing all cells of the current row
            System.out.println();
        }
    }

    // Main method to run the program
    public static void main(String[] args) {
        // Create an instance of the SimpleGoBoard class to represent the game board
        GoBoard goBoard = new GoBoard();
        // Display the initial state of the board
        goBoard.displayBoard();

    }
}

